type Query {
    movies: [Movies!]!
    actors: [Actors!]!
    directors: [Directors!]!
  }

  type Mutation {
    createUser(data: CreateUserInput) : AuthPayload!
    login(data: CreateUserInput) : AuthPayload!
  }

  type Movies {
    id: ID!
    title: String!
    year: String!
    rating: String!
    actors: [Actors!]!
    directors: [Directors!]!
  }

  type Actors {
    id: ID!
    name: String!
    birthday: String!
    country: String!
    movies: Movies!
    directors: [Directors!]!
  }

  type Directors {
    id: ID!
    name: String!
    birthday: String!
    country: String!
    actors: Actors!
    movies: Movies!
  }

  type AuthPayload {
    token: String!
    user: User!
  }

  type User {
    id: ID!
    name: String!
    password: String!
  }

  input CreateUserInput {
    username: String
    password: String
  }
